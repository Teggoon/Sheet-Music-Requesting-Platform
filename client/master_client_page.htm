<!DOCTYPE html>
<html>
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular-route.js"></script>



<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>

<body ng-app="master_client_page">

<!--<div ng-app="login_page" ng-controller="server_response">
  {{server_response}}
</div>
-->

<div ng-view></div>


<script>
var app = angular.module("master_client_page",["ngRoute"]);

app.config(function($routeProvider) {
  $routeProvider
  .when("/", {
    templateUrl : "login_page_template.htm",
    controller : "login_page"
  })
  .when("/client_portal", {
    templateUrl : "client_portal.htm",
    controller : "client_portal"
  })
});

app.controller("login_page", function($scope, $http) {
  $scope.login_labels = [
    {description: "username or email", var_name: "username"},
    {description: "password", var_name: "password"}
  ];
  $scope.signup_labels = [
    {description: "username", var_name: "username"},
    {description: "email", var_name: "email"},
    {description: "password", var_name: "password"}
  ];

  $scope.form_description = "Please log in";
  $scope.option = "submit_form/login";
  $scope.server_response =  "";
  $scope.label_option = $scope.login_labels;

  $scope.choose_signup = function() {
    $scope.form_description = "Please sign up";
    $scope.option = "submit_form/signup";
    $scope.label_option = $scope.signup_labels;
  };

  $scope.choose_login = function() {
    $scope.form_description = "Please log in";
    $scope.option = "submit_form/login";
    $scope.label_option = $scope.login_labels;
  };

  $scope.request_proceed = function() {
    //AJAX request
    var xhttp = new XMLHttpRequest();
      xhttp.open("POST", "/", true);
      xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");

      //serializing form data
      var data = $('form').serialize();

      // actual posting of request:
      // request url (handled by Express on the other side)
      // callback function handling the response object.
      var requesturl = "/" + $scope.option;
      $.post(requesturl,
      data,
      //data is the returned response from the server
      function(data, status){
        // if the returned data is an html page
        if (data[0] == "<") {
          //REDIRECT
          window.location.href = window.location.href + "client_portal";

        // if what's returned is only a message
        } else {
          $("#returnMessage").html(data);
        }
      });

  };





});


app.controller("client_portal", function($scope, $http) {
  $scope.form_description = "Notice me now";
});

</script>

</body>
</html>
